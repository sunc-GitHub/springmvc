<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:mvc="http://www.springframework.org/schema/mvc"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc.xsd">

<!--
      use-default-filter = true 使用默认的过滤器 @controller @service @Resposity @compoment
    -->
    <context:component-scan base-package="com.jsu.js" use-default-filters="false">
        <!--添加@controller注解扫描-->
        <context:include-filter type="annotation" expression="org.springframework.stereotype.Controller"/>
    </context:component-scan>

    <!--视图解析器-->
    <bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
        <property name="prefix" value="/WEB-INF/jsp/"/>
        <property name="suffix" value=".jsp"/>
    </bean>

    <!--类型转换器-->
    <bean id="conversionService" class="org.springframework.context.support.ConversionServiceFactoryBean">
       <property name="converters">
           <list>
               <bean class="com.jsu.js.converter.StringDateConverter"/>
           </list>
       </property>
    </bean>

    <mvc:annotation-driven conversion-service="conversionService"/>



    <!--
        springmvc国际化
        1.加载资源文件
        baseName.properties baseName_en.properties baseName_en_Us.properties
    -->
    <bean id="messageSource" class="org.springframework.context.support.ReloadableResourceBundleMessageSource">
        <property name="basenames">
            <list>
                <value>/WEB-INF/resource/message</value>
            </list>
        </property>
        <!-- 设置utf-8编码-->
        <property name="cacheSeconds" value="0"/>
        <property name="defaultEncoding" value="UTF-8"/>
    </bean>

    <!--
        2.设置Locale
            request域 AcceptHeaderLocaleResolver 获得请求作用域中的Locale
                    request.setLocal
            session中设置 SessionLocalResolver
                        在服务器内存中开辟空间，以(sessionId,locale对象）存储在session域中
            cookie中设置 CookieLocaleResolver

        3.在页面显示内容
            springmvc标签
    -->
    <bean id="localeResolver" class="org.springframework.web.servlet.i18n.SessionLocaleResolver">
        <!--配置默认的locale-->
        <property name="defaultLocale" value="zh_CN"/>
        <!--
            配置session中参数名
            如果不设置,那么locale对象以
            (类)SessionLocaleResolver.LOCALE_SESSION_ATTRIBUTE_NAME为 sessionId，
            存储在session域中
        -->
        <property name="localeAttributeName" value="language" />
     </bean>


    <!--配置locale的拦截器-->
    <mvc:interceptors>
        <bean class="org.springframework.web.servlet.i18n.LocaleChangeInterceptor">
            <!--
                前端通常会附带一个参数，例如
                <a href="il8n/sessionLocaleResover?requst_Locale=zh_CN">中文</a>
                此时参数requst_Locale为参数名value值，参数的值‘zh_CN’将会赋值给locale对象
            -->
            <property name="paramName" value="requst_Locale"/>
        </bean>
    </mvc:interceptors>


    <!--
        设置请求转发路径，相当于经过一次controller方法的请求转发
        path 接收请求 相当与@requestMapping
        view-name 请求转发的页面 相当于 return "success";
    -->
    <mvc:view-controller path="/il8n/sessionLocaleResover" view-name="success"/>

    <!--
       DispatchServlet不拦截静态资源
       http://localhost:8080/springmvc_05_i18n_war_exploded/static/js/jquery.min.js
   -->
    <mvc:resources mapping="/static/**" location="/static/" />

</beans>